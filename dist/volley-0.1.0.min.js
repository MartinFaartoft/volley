/*! volley - v0.1.0 - 2016-06-18
* https://github.com/martinfaartoft/
* Copyright (c) 2016 Piston.js <martin.faartoft@gmail.com>; Licensed MIT*/
var __extends=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},volley;(function(t){var e=function(t){function e(e,i,s,o){t.call(this,e,i,o),this.pos=e,this.speed=i,this.accel=s,this.friction=[1e-4,.001],this.collided=0}return __extends(e,t),e.prototype.render=function(t){t.fillStyle="red",t.beginPath(),t.arc(this.pos[0],this.pos[1],this.radius,0,2*Math.PI),t.fill()},e.prototype.update=function(t,e){this.accelerate(t),this.checkWallCollisions(e),this.collided>0&&(this.collided-=t)},e.prototype.accelerate=function(t){this.speed[0]+=this.accel[0]*t,this.speed[1]+=this.accel[1]*t,this.speed[0]*=1-this.friction[0],this.speed[1]*=1-this.friction[1],this.pos[0]+=this.speed[0]*t,this.pos[1]+=this.speed[1]*t},e.prototype.checkWallCollisions=function(t){this.pos[1]+this.radius>=t.dimensions[1]&&this.speed[1]>0&&(this.speed[1]=-1*this.speed[1]),0>this.pos[0]-this.radius&&0>this.speed[0]?this.speed[0]*=-1:this.pos[0]+this.radius>t.dimensions[0]&&this.speed[0]>0&&(this.speed[0]*=-1)},e.prototype.collideWith=function(t){if(!(this.collided>0)){this.collided=.1;var e=10,i=100,s=this.pos[0],o=this.pos[1],l=t.pos[0],h=t.pos[1],n=[l-s,h-o],r=this.magnitude(n),p=[n[0]/r,n[1]/r],a=[-p[1],p[0]],d=[this.speed[0],this.speed[1]],c=[t.speed[0],t.speed[1]],u=this.dotProduct(p,d),y=this.dotProduct(a,d),f=this.dotProduct(p,c),v=this.dotProduct(a,c),P=y,g=v,m=this.calculateNormalVelocity(u,f,e,i),w=this.calculateNormalVelocity(f,u,i,e),b=[m*p[0],m*p[1]],_=[w*p[0],w*p[1]],C=[P*a[0],P*a[1]],k=[g*a[0],g*a[1]],x=this.add(b,C);this.add(_,k),this.speed=[x[0],x[1]]}},e.prototype.add=function(t,e){return[t[0]+e[0],t[1]+e[1]]},e.prototype.magnitude=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))},e.prototype.dotProduct=function(t,e){return t[0]*e[0]+t[1]*e[1]},e.prototype.calculateNormalVelocity=function(t,e,i,s){return(t*(i-s)+2*s*e)/(i+s)},e}(ps.Entity);t.Ball=e})(volley||(volley={}));var volley;(function(t){var e=function(t){function e(e,i,s,o){t.call(this,e,[0,0],s),this.color=i,this.keys=o,this.accel=[0,500]}return __extends(e,t),e.prototype.render=function(t){t.fillStyle=this.color,t.beginPath(),t.arc(this.pos[0],this.pos[1],this.radius,0,Math.PI,!0),t.fill()},e.prototype.update=function(t,e){this.pos[1]<e.dimensions[1]&&this.accelerate(t)},e.prototype.accelerate=function(t){this.speed[0]+=this.accel[0]*t,this.speed[1]+=this.accel[1]*t,this.pos[0]+=this.speed[0]*t,this.pos[1]+=this.speed[1]*t},e.prototype.collideWith=function(){},e.prototype.handleInput=function(){this.speed[0]=0,ps.isKeyDown(this.keys[0])?this.speed[0]=-200:ps.isKeyDown(this.keys[1])?this.speed[0]=200:ps.isKeyDown(this.keys[2])&&(this.speed[1]=-500)},e}(ps.Entity);t.Player=e})(volley||(volley={}));var volley;(function(t){var e=function(e){function i(i,s){e.call(this,i),this.dimsensions=i,this.debug=s,this.ball=new t.Ball([500,100],[200,0],[0,400],50),this.leftPlayer=new t.Player([200,768],"green",50,["a","d","s"]),this.rightPlayer=new t.Player([890,768],"blue",50,["LEFT","RIGHT","UP"])}return __extends(i,e),i.prototype.render=function(t){t.fillStyle="black",t.fillRect(0,0,this.dimensions[0],this.dimensions[1]),this.ball.render(t,this),this.leftPlayer.render(t,this),this.rightPlayer.render(t,this)},i.prototype.update=function(t){this.rightPlayer.handleInput(),this.leftPlayer.handleInput(),this.ball.update(t,this),this.leftPlayer.update(t,this),this.rightPlayer.update(t,this),ps.detectCircularCollision(this.ball,this.leftPlayer,this),ps.detectCircularCollision(this.ball,this.rightPlayer,this)},i}(ps.BaseGameState);t.VolleyState=e})(volley||(volley={}));var volley;(function(t){var e=document.createElement("canvas"),i=e.getContext("2d");e.width=1024,e.height=768,document.body.appendChild(e);var s=!1,o=[e.width,e.height],l=new t.VolleyState(o,s),h=new ps.Engine(l,i,s);h.run()})(volley||(volley={}));